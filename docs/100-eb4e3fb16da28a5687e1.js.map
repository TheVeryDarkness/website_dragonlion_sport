{"version":3,"sources":["webpack://website_dragonlion_sport/./js/getVideoURL.js","webpack://website_dragonlion_sport/./js/infoTree.js","webpack://website_dragonlion_sport/./js/localStorage.js"],"names":["storage","fetch","alert","videoSrcUrls","github","url","init","method","mode","referrer","raw_github","gitee","async","fetchVideoSrc","desc","res","ok","json","nodes","tree","initTree","callback","set","JSON","stringify","addVideoSrcToLocalStorage","fromSessionStorage","get","parse","error","console","log","fetchVideoSrcFromLocalStorage","e","key","element","fetchVideoSrcFromWeb","getEmbededVideoSrc","getTree","remove","status","ls","document","getElementById","value","showStatus","defaultNode","sub","nextNodesAndAll","selectedIndex","Array","concat","rev","node","selectedNodes","nextNodes","buffer","window","sessionStorage","getItem","setItem","removeItem"],"mappings":"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","file":"100-eb4e3fb16da28a5687e1.js","sourcesContent":["/*\r\n\trequire root.js\r\n\r\n\tFormat:\r\n\t\tsport\r\n\t\t\ttime\r\n\t\t\t\tevent\r\n\t\t\t\t\tgroup\r\n\t\t\t\t\t\taction\r\n\tRank (Suggestion):\r\n\t\tvalue\r\n\t\trange\r\n\t\tscore(for group)\r\n\t\tsrc\r\n\t\torigin\r\n\t\tframe\r\n\t\tfrom\r\n\t\tsub\r\n*/\r\nexport {\r\n getEmbededVideoSrc,\r\n fetchVideoSrcFromLocalStorage,\r\n fetchVideoSrcFromWeb,\r\n addVideoSrcToLocalStorage,\r\n removeVideoSrcFromLocalStorage,\r\n};\r\nconst storage = require(\"./localStorage\");\r\n\r\nif (!fetch)\r\n alert(\"Fetch api is not supported, consider using another browser.\");\r\n\r\nasync function getEmbededVideoSrc() {\r\n return require(\"../data/video.json\");\r\n}\r\nasync function fetchVideoSrcFromLocalStorage() {\r\n const fromSessionStorage = storage.get(\"video\");\r\n if (fromSessionStorage == null) throw \"No item named video in local storage.\";\r\n try {\r\n  const parsed = JSON.parse(fromSessionStorage);\r\n  return parsed;\r\n } catch (error) {\r\n  console.log(\"Data in local storage not available.\");\r\n  throw error;\r\n }\r\n}\r\nfunction removeVideoSrcFromLocalStorage() {\r\n storage.remove(\"video\");\r\n}\r\nfunction addVideoSrcToLocalStorage(tree) {\r\n storage.set(\"video\", JSON.stringify(tree));\r\n}\r\nconst videoSrcUrls = {\r\n github: {\r\n  url: \"https://theverydarkness.github.io/sport_data/video.json\",\r\n  init: {\r\n   method: \"GET\",\r\n   mode: \"cors\",\r\n   referrer: \"no-referrer\",\r\n  },\r\n },\r\n raw_github: {\r\n  url:\r\n   \"https://raw.githubusercontent.com/TheVeryDarkness/sport_data/main/video.json\",\r\n  init: {\r\n   method: \"GET\",\r\n   mode: \"cors\",\r\n   referrer: \"no-referrer\",\r\n  },\r\n },\r\n gitee: {\r\n  url: \"https://gitee.com/TheVeryDarkness/sport_data/raw/main/video.json\",\r\n  init: {\r\n   method: \"GET\",\r\n   mode: \"no-cors\",\r\n   referrer: \"no-referrer\",\r\n  },\r\n },\r\n};\r\nasync function fetchVideoSrc(desc) {\r\n const res = await fetch(desc.url, desc.init);\r\n if (res.ok) return res.json();\r\n else throw res;\r\n}\r\nasync function fetchVideoSrcFromWeb() {\r\n for (const key in videoSrcUrls) {\r\n  const element = videoSrcUrls[key];\r\n  try {\r\n   const res = await fetchVideoSrc(element);\r\n   return res;\r\n  } catch (e) {\r\n   console.error(\"Error occurred when fetch from \", key);\r\n   console.log(e);\r\n  }\r\n }\r\n}\r\n","/*\r\n\trequire getvideoURL.js\r\n*/\r\nconst storage = require(\"./localStorage\");\r\nimport {\r\n getEmbededVideoSrc,\r\n fetchVideoSrcFromLocalStorage,\r\n fetchVideoSrcFromWeb,\r\n addVideoSrcToLocalStorage,\r\n removeVideoSrcFromLocalStorage,\r\n} from \"./getVideoURL\";\r\nexport { nodes, tree, initTree, nextNodesAndAll, defaultNode };\r\nvar nodes = [[], [], [], [], []];\r\nvar tree = {};\r\nconst all = \"全选\";\r\n\r\nfunction showStatus(status) {\r\n const ls = document.getElementById(\"loadStatus\");\r\n if (!ls) console.error(\"Name an element to show the status of loading.\");\r\n else\r\n  switch (status) {\r\n   case \"Success\":\r\n    ls.value = \"刷新\";\r\n    break;\r\n   case \"Failed\":\r\n    ls.value = \"重试\";\r\n    break;\r\n   case null:\r\n    ls.value = \"等待\";\r\n    break;\r\n   default:\r\n    ls.value = \"错误\";\r\n    console.error('Unexpected status string \"', status, '\"');\r\n    break;\r\n  }\r\n}\r\nasync function getTree() {\r\n try {\r\n  return await fetchVideoSrcFromLocalStorage();\r\n } catch (e) {\r\n  console.log(e);\r\n  console.error(\"Can't load from local storage.\");\r\n }\r\n\r\n try {\r\n  return await fetchVideoSrcFromWeb();\r\n } catch (e) {\r\n  console.log(e);\r\n  console.error(\"Local storage removed. Refresh to reload.\");\r\n  console.error(\"Can't load from web. Using embeded data.\");\r\n }\r\n\r\n storage.set(\"status\", \"Failed\");\r\n\r\n try {\r\n  return await getEmbededVideoSrc();\r\n } catch (e) {\r\n  console.log(error);\r\n  alert(\"Failed to load video data properly by any means.\");\r\n }\r\n\r\n throw \"All failed.\";\r\n}\r\nasync function initTree(callback) {\r\n try {\r\n  tree = await getTree();\r\n  addVideoSrcToLocalStorage(tree);\r\n  callback();\r\n } catch (error) {\r\n  removeVideoSrcFromLocalStorage();\r\n }\r\n showStatus(storage.get(\"status\"));\r\n}\r\n\r\nfunction defaultNode(value = all) {\r\n return { value: value, sub: [] };\r\n}\r\n//Return nodes\r\nfunction selectedNodes(nodes, selectedIndex) {\r\n if (selectedIndex === 0) return nodes;\r\n else return new Array(nodes[selectedIndex]);\r\n}\r\n\r\nfunction nextNodes(nodes, selectedIndex) {\r\n var rev = new Array();\r\n for (const node of selectedNodes(nodes, selectedIndex))\r\n  if (node.sub) rev = rev.concat(node.sub);\r\n  else console.log(\"Node '\", node.value, \"' miss property 'sub'.\");\r\n return rev;\r\n}\r\n\r\nfunction nextNodesAndAll(nodes, selectedIndex) {\r\n return new Array(defaultNode(all)).concat(nextNodes(nodes, selectedIndex));\r\n}\r\n","export { get, set, remove };\r\nvar get, set, remove;\r\nvar buffer = {};\r\nif (!window.sessionStorage)\r\n console.log(\"Local storage not supported.\");\r\nif (window.sessionStorage) {\r\n const storage = sessionStorage;\r\n get = function (key) {\r\n  return storage.getItem(key);\r\n }\r\n set = function (key, value) {\r\n  storage.setItem(key, value);\r\n }\r\n remove = function (key) {\r\n  storage.removeItem(key);\r\n }\r\n} else {\r\n get = function (key) {\r\n  return buffer[key];\r\n }\r\n set = function (key, value) {\r\n  buffer[key] = value;\r\n }\r\n remove = function (key) {\r\n  delete buffer[key];\r\n }\r\n}"],"sourceRoot":""}